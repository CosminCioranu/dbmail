
#
# modify dbmail schema to support header caching.
#
# $Id$
#
# WARNING:
#
# This document is still in the early design stages.  Don't apply yet !


#
# store all headers by storing all headernames and headervalues in separate
# tables.
#

DROP TABLE IF EXISTS dbmail_headername;
CREATE TABLE dbmail_headername (
	id		BIGINT NOT NULL AUTO_INCREMENT,
	headername	VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (headername)
) type=InnoDB ;

DROP TABLE IF EXISTS dbmail_headervalue;
CREATE TABLE dbmail_headervalue (
	headername_id	BIGINT NOT NULL
		REFERENCES dbmail_headername(id)
		ON UPDATE CASCADE ON DELETE CASCADE,
        physmessage_id	BIGINT NOT NULL
		REFERENCES dbmail_physmessage(id)
		ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	headervalue	VARCHAR(255) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;

# provide separate storage of commonly used headers

# Threading


# support fast threading by breaking out In-Reply-To and References headers
# these fields contain zero or more Message-Id values that determine the message
# threading

DROP TABLE IF EXISTS dbmail_inreplytofield;
CREATE TABLE dbmail_inreplytofield (
        physmessage_id  BIGINT NOT NULL
			REFERENCES dbmail_physmessage(id)
			ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	inreplytofield	VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;

DROP TABLE IF EXISTS dbmail_referencesfield;
CREATE TABLE dbmail_referencesfield (
        physmessage_id  BIGINT NOT NULL
			REFERENCES dbmail_physmessage(id)
			ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	referencesfield	VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;


# Searching and Sorting


# support fast sorting by breaking out and preparsing the fields most commonly used
# in searching and sorting: From, To, Reply-To, Cc,


DROP TABLE IF EXISTS dbmail_fromfield;
CREATE TABLE dbmail_fromfield (
        physmessage_id  BIGINT NOT NULL
			REFERENCES dbmail_physmessage(id)
			ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	fromname	VARCHAR(100) NOT NULL DEFAULT '',
	fromaddr	VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;
DROP TABLE IF EXISTS dbmail_tofield;
CREATE TABLE dbmail_tofield (
        physmessage_id  BIGINT NOT NULL
			REFERENCES dbmail_physmessage(id)
			ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	toname		VARCHAR(100) NOT NULL DEFAULT '',
	toaddr		VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;
DROP TABLE IF EXISTS dbmail_replytofield;
CREATE TABLE dbmail_replytofield (
        physmessage_id  BIGINT NOT NULL
			REFERENCES dbmail_physmessage(id)
			ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	replytoname	VARCHAR(100) NOT NULL DEFAULT '',
	replytoaddr	VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;
DROP TABLE IF EXISTS dbmail_ccfield;
CREATE TABLE dbmail_ccfield (
        physmessage_id  BIGINT NOT NULL
			REFERENCES dbmail_physmessage(id)
			ON UPDATE CASCADE ON DELETE CASCADE,
	id		BIGINT NOT NULL AUTO_INCREMENT,
	ccname		VARCHAR(100) NOT NULL DEFAULT '',
	ccaddr		VARCHAR(100) NOT NULL DEFAULT '',
	PRIMARY KEY (id),
	UNIQUE (physmessage_id, id)
) type=InnoDB ;

# Some other fields will also be commonly used for search/sort but do not warrant 
# preparsing and/or separate tables. 

#ALTER TABLE dbmail_physmessage 
#	ADD sendername 	VARCHAR(100) NOT NULL DEFAULT '';
#	
#ALTER TABLE dbmail_physmessage 
#	ADD senderaddr 	VARCHAR(100) NOT NULL DEFAULT '';
#
#ALTER TABLE dbmail_physmessage 
#	ADD subject 	VARCHAR(255) NOT NULL DEFAULT '';
#
#ALTER TABLE dbmail_physmessage 
#	ADD messageid 	VARCHAR(100) NOT NULL DEFAULT '';

COMMIT;

